import "./chunk-Z3RPZO2Q.js";
import {
  Fragment,
  Transition,
  computed2 as computed,
  createBlock,
  createCommentVNode,
  createTextVNode,
  createVNode,
  nextTick,
  openBlock,
  ref,
  renderList,
  renderSlot,
  toDisplayString,
  toRefs,
  vShow,
  watch,
  withCtx,
  withDirectives,
  withKeys,
  withModifiers
} from "./chunk-VKXXNAZX.js";
import "./chunk-S5KM4IGW.js";

// node_modules/@vueform/multiselect/dist/multiselect.js
function S(e) {
  return -1 !== [null, void 0, false].indexOf(e);
}
function w(e) {
  return String(e).toLowerCase().trim();
}
function k(e) {
  return (k = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
    return typeof e2;
  } : function(e2) {
    return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
  })(e);
}
function O(e, l, t) {
  return l in e ? Object.defineProperty(e, l, { value: t, enumerable: true, configurable: true, writable: true }) : e[l] = t, e;
}
function q(a, u, r) {
  var o = toRefs(a), i = o.options, c = o.mode, s = o.trackBy, v = o.limit, d = o.hideSelected, p = o.createTag, f = o.label, h = o.appendNewTag, m = o.multipleLabel, b = o.object, y = o.loading, g = o.delay, q2 = o.resolveOnLoad, P2 = o.minChars, x2 = o.filterResults, T2 = o.clearOnSearch, D2 = o.clearOnSelect, B2 = o.valueProp, I2 = o.canDeselect, A2 = o.max, j2 = r.iv, M2 = r.ev, V2 = r.search, C2 = r.blurSearch, $2 = r.clearSearch, E2 = r.update, H2 = r.blurInput, L = r.pointer, N = ref([]), R = ref([]), K = ref(false), F = computed(function() {
    var e, l = R.value || [];
    return e = l, "[object Object]" === Object.prototype.toString.call(e) && (l = Object.keys(l).map(function(e2) {
      var t, n = l[e2];
      return O(t = {}, B2.value, e2), O(t, s.value, n), O(t, f.value, n), t;
    })), l = l.map(function(e2, l2) {
      var t;
      return "object" === k(e2) ? e2 : (O(t = {}, B2.value, e2), O(t, s.value, e2), O(t, f.value, e2), t);
    }), N.value.length && (l = l.concat(N.value)), l;
  }), _ = computed(function() {
    var e = F.value;
    return J.value.length && (e = J.value.concat(e)), V2.value && x2.value && (e = e.filter(function(e2) {
      return -1 !== w(e2[s.value]).indexOf(w(V2.value));
    })), d.value && (e = e.filter(function(e2) {
      return !ie(e2);
    })), v.value > 0 && (e = e.slice(0, v.value)), e;
  }), W = computed(function() {
    switch (c.value) {
      case "single":
        return !S(j2.value[B2.value]);
      case "multiple":
      case "tags":
        return !S(j2.value) && j2.value.length > 0;
    }
  }), U = computed(function() {
    return void 0 !== m && void 0 !== m.value ? m.value(j2.value) : j2.value && j2.value.length > 1 ? "".concat(j2.value.length, " options selected") : "1 option selected";
  }), z = computed(function() {
    return !F.value.length && !K.value;
  }), G = computed(function() {
    return F.value.length > 0 && 0 == _.value.length;
  }), J = computed(function() {
    var e;
    return false !== p.value && V2.value ? -1 !== oe(V2.value) ? [] : [(e = {}, O(e, B2.value, V2.value), O(e, f.value, V2.value), O(e, s.value, V2.value), e)] : [];
  }), Q = computed(function() {
    switch (c.value) {
      case "single":
        return null;
      case "multiple":
      case "tags":
        return [];
    }
  }), X = computed(function() {
    return y.value || K.value;
  }), Y = function(e) {
    switch ("object" !== k(e) && (e = re(e)), c.value) {
      case "single":
        E2(e);
        break;
      case "multiple":
      case "tags":
        E2(j2.value.concat(e));
    }
    u.emit("select", ee(e), e);
  }, Z = function(e) {
    switch ("object" !== k(e) && (e = re(e)), c.value) {
      case "single":
        te();
        break;
      case "tags":
      case "multiple":
        E2(j2.value.filter(function(l) {
          return l[B2.value] != e[B2.value];
        }));
    }
    u.emit("deselect", ee(e), e);
  }, ee = function(e) {
    return b.value ? e : e[B2.value];
  }, le = function(e) {
    Z(e);
  }, te = function() {
    u.emit("clear"), E2(Q.value);
  }, ne = function(e) {
    switch (c.value) {
      case "single":
        return !S(j2.value) && j2.value[B2.value] == e[B2.value];
      case "tags":
      case "multiple":
        return !S(j2.value) && -1 !== j2.value.map(function(e2) {
          return e2[B2.value];
        }).indexOf(e[B2.value]);
    }
  }, ae = function(e) {
    return true === e.disabled;
  }, ue = function() {
    return !(void 0 === A2 || -1 === A2.value || !W.value && A2.value > 0) && j2.value.length >= A2.value;
  }, re = function(e) {
    return F.value[F.value.map(function(e2) {
      return String(e2[B2.value]);
    }).indexOf(String(e))];
  }, oe = function(e) {
    return F.value.map(function(e2) {
      return w(e2[s.value]);
    }).indexOf(w(e));
  }, ie = function(e) {
    return "tags" === c.value && d.value && ne(e);
  }, ce = function(e) {
    N.value.push(e);
  }, se = function() {
    S(M2.value) || (j2.value = de(M2.value));
  }, ve = function(e) {
    K.value = true, i.value(V2.value).then(function(l) {
      R.value = l, "function" == typeof e && e(l), K.value = false;
    });
  }, de = function(e) {
    return S(e) ? "single" === c.value ? {} : [] : b.value ? e : "single" === c.value ? re(e) || {} : e.filter(function(e2) {
      return !!re(e2);
    }).map(function(e2) {
      return re(e2);
    });
  };
  if ("single" !== c.value && !S(M2.value) && !Array.isArray(M2.value))
    throw new Error('v-model must be an array when using "'.concat(c.value, '" mode'));
  return i && "function" == typeof i.value ? q2.value ? ve(se) : 1 == b.value && se() : (R.value = i.value, se()), g.value > -1 && watch(V2, function(e) {
    e.length < P2.value || (K.value = true, T2.value && (R.value = []), setTimeout(function() {
      e == V2.value && i.value(V2.value).then(function(l) {
        e == V2.value && (R.value = l, L.value = _.value.filter(function(e2) {
          return true !== e2.disabled;
        })[0] || null, K.value = false);
      });
    }, g.value));
  }, { flush: "sync" }), watch(M2, function(e) {
    var l, t, n;
    if (S(e))
      j2.value = de(e);
    else
      switch (c.value) {
        case "single":
          (b.value ? e[B2.value] != j2.value[B2.value] : e != j2.value[B2.value]) && (j2.value = de(e));
          break;
        case "multiple":
        case "tags":
          l = b.value ? e.map(function(e2) {
            return e2[B2.value];
          }) : e, t = j2.value.map(function(e2) {
            return e2[B2.value];
          }), n = t.slice().sort(), l.length === t.length && l.slice().sort().every(function(e2, l2) {
            return e2 === n[l2];
          }) || (j2.value = de(e));
      }
  }, { deep: true }), "function" != typeof a.options && watch(i, function(e, l) {
    R.value = a.options, Object.keys(j2.value).length || se(), function() {
      if (W.value)
        if ("single" === c.value) {
          var e2 = re(j2.value[B2.value])[f.value];
          j2.value[f.value] = e2, b.value && (M2.value[f.value] = e2);
        } else
          j2.value.forEach(function(e3, l2) {
            var t = re(j2.value[l2][B2.value])[f.value];
            j2.value[l2][f.value] = t, b.value && (M2.value[l2][f.value] = t);
          });
    }();
  }), { fo: _, filteredOptions: _, hasSelected: W, multipleLabelText: U, eo: F, extendedOptions: F, noOptions: z, noResults: G, resolving: K, busy: X, select: Y, deselect: Z, remove: le, clear: te, isSelected: ne, isDisabled: ae, isMax: ue, getOption: re, handleOptionClick: function(e) {
    if (!ae(e))
      switch (c.value) {
        case "single":
          if (ne(e))
            return void (I2.value && Z(e));
          Y(e), C2(), H2();
          break;
        case "multiple":
          if (ne(e))
            return void Z(e);
          if (ue())
            return;
          Y(e), D2.value && $2();
          break;
        case "tags":
          if (ne(e))
            return void Z(e);
          if (ue())
            return;
          void 0 === re(e[B2.value]) && p.value && (u.emit("tag", e[B2.value]), h.value && ce(e), $2()), D2.value && $2(), Y(e);
      }
  }, handleTagRemove: function(e, l) {
    0 === l.button ? le(e) : l.preventDefault();
  }, refreshOptions: function(e) {
    ve(e);
  }, resolveOptions: ve };
}
function P(e) {
  return function(e2) {
    if (Array.isArray(e2))
      return x(e2);
  }(e) || function(e2) {
    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e2))
      return Array.from(e2);
  }(e) || function(e2, l) {
    if (!e2)
      return;
    if ("string" == typeof e2)
      return x(e2, l);
    var t = Object.prototype.toString.call(e2).slice(8, -1);
    "Object" === t && e2.constructor && (t = e2.constructor.name);
    if ("Map" === t || "Set" === t)
      return Array.from(e2);
    if ("Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return x(e2, l);
  }(e) || function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function x(e, l) {
  (null == l || l > e.length) && (l = e.length);
  for (var t = 0, n = new Array(l); t < l; t++)
    n[t] = e[t];
  return n;
}
var T = { name: "Multiselect", emits: ["open", "close", "select", "deselect", "input", "search-change", "tag", "update:modelValue", "change", "clear"], props: { value: { required: false }, modelValue: { required: false }, options: { type: [Array, Object, Function], required: false, default: () => [] }, id: { type: [String, Number], required: false, default: "multiselect" }, name: { type: [String, Number], required: false, default: "multiselect" }, disabled: { type: Boolean, required: false, default: false }, label: { type: String, required: false, default: "label" }, trackBy: { type: String, required: false, default: "label" }, valueProp: { type: String, required: false, default: "value" }, placeholder: { type: String, required: false, default: null }, mode: { type: String, required: false, default: "single" }, searchable: { type: Boolean, required: false, default: false }, limit: { type: Number, required: false, default: -1 }, maxHeight: { type: Number, required: false, default: 160 }, hideSelected: { type: Boolean, required: false, default: true }, createTag: { type: Boolean, required: false, default: false }, appendNewTag: { type: Boolean, required: false, default: true }, caret: { type: Boolean, required: false, default: true }, loading: { type: Boolean, required: false, default: false }, noOptionsText: { type: String, required: false, default: "The list is empty" }, noResultsText: { type: String, required: false, default: "No results found" }, multipleLabel: { type: Function, required: false }, object: { type: Boolean, required: false, default: false }, delay: { type: Number, required: false, default: -1 }, minChars: { type: Number, required: false, default: 0 }, resolveOnLoad: { type: Boolean, required: false, default: true }, filterResults: { type: Boolean, required: false, default: true }, clearOnSearch: { type: Boolean, required: false, default: false }, clearOnSelect: { type: Boolean, required: false, default: true }, canDeselect: { type: Boolean, required: false, default: true }, max: { type: Number, required: false, default: -1 }, showOptions: { type: Boolean, required: false, default: true }, addTagOn: { type: Array, required: false, default: () => ["enter"] }, required: { type: Boolean, required: false, default: false }, openDirection: { type: String, required: false, default: "bottom" }, nativeSupport: { type: Boolean, required: false, default: false } }, setup(u, r) {
  const o = function(n, a) {
    var u2 = toRefs(n), r2 = u2.value, o2 = u2.modelValue, i2 = u2.mode, c2 = u2.valueProp, s2 = ref("single" !== i2.value ? [] : {}), v2 = void 0 !== a.expose ? o2 : r2, d2 = computed(function() {
      return "single" === i2.value ? s2.value[c2.value] : s2.value.map(function(e) {
        return e[c2.value];
      });
    }), p2 = computed(function() {
      return "single" !== i2.value ? s2.value.map(function(e) {
        return e[c2.value];
      }).join(",") : s2.value[c2.value];
    });
    return { iv: s2, internalValue: s2, ev: v2, externalValue: v2, textValue: p2, plainValue: d2 };
  }(u, r), i = function(n, a, u2) {
    var r2 = toRefs(n), o2 = r2.searchable, i2 = (r2.id, ref(null)), c2 = computed(function() {
      return o2.value ? -1 : 0;
    });
    return { multiselect: i2, tabindex: c2, focusInput: function() {
      i2.value.querySelector(".multiselect-input").focus();
    }, blurInput: function() {
      i2.value.querySelector(".multiselect-input").blur();
    } };
  }(u), c = { pointer: ref(null) }, s = function(l, t, n) {
    var a = toRefs(l), u2 = a.object, r2 = a.valueProp, o2 = a.mode, i2 = n.iv, c2 = function(e) {
      return u2.value || S(e) ? e : Array.isArray(e) ? e.map(function(e2) {
        return e2[r2.value];
      }) : e[r2.value];
    }, s2 = function(e) {
      return S(e) ? "single" === o2.value ? {} : [] : e;
    };
    return { update: function(e) {
      i2.value = s2(e);
      var l2 = c2(e);
      t.emit("change", l2), t.emit("input", l2), t.emit("update:modelValue", l2);
    } };
  }(u, r, { iv: o.iv }), v = function(a, u2, r2) {
    var o2 = toRefs(a), i2 = o2.searchable, c2 = o2.mode, s2 = r2.iv, v2 = ref(null), d2 = ref(null), p2 = computed(function() {
      return v2.value ? "".concat(v2.value.length, "ch") : "tags" === c2.value && -1 === [null, void 0].indexOf(s2.value) && s2.value.length ? "1ch" : "100%";
    });
    return watch(v2, function(e) {
      u2.emit("search-change", e);
    }), { search: v2, input: d2, tagsSearchWidth: p2, clearSearch: function() {
      v2.value = "";
    }, focusSearch: function() {
      d2.value.focus();
    }, blurSearch: function() {
      i2.value && d2.value.blur();
    } };
  }(u, r, { iv: o.iv }), d = function(n, a, u2) {
    var r2 = toRefs(n), o2 = r2.maxHeight, i2 = r2.disabled, c2 = r2.searchable, s2 = u2.multiselect, v2 = u2.blurInput, d2 = u2.blurSearch, p2 = u2.focusInput, f2 = u2.focusSearch, h2 = ref(false), m = computed(function() {
      return "".concat(o2.value, "px");
    });
    return { isOpen: h2, contentMaxHeight: m, openDropdown: function() {
      i2.value || (h2.value = true, a.emit("open"));
    }, closeDropdown: function() {
      h2.value = false, a.emit("close");
    }, open: function() {
      c2 && c2.value ? f2() : p2();
    }, close: function() {
      c2 && c2.value ? d2() : v2();
    }, handleInputMousedown: function(e) {
      h2.value && !c2.value && (s2.value.querySelector(".multiselect-input").dispatchEvent(new Event("blur")), s2.value.querySelector(".multiselect-input").blur(), e.preventDefault());
    } };
  }(u, r, { multiselect: i.multiselect, blurInput: i.blurInput, blurSearch: v.blurSearch, focusInput: i.focusInput, focusSearch: v.focusSearch }), p = q(u, r, { ev: o.ev, iv: o.iv, search: v.search, blurSearch: v.blurSearch, clearSearch: v.clearSearch, update: s.update, blurInput: i.blurInput, pointer: c.pointer }), f = function(l, u2, r2) {
    var o2 = toRefs(l), i2 = o2.id, c2 = o2.valueProp, s2 = r2.fo, v2 = r2.handleOptionClick, d2 = r2.search, p2 = r2.pointer, f2 = computed(function() {
      return s2.value.filter(function(e) {
        return true !== e.disabled;
      });
    }), h2 = function(e) {
      p2.value = e;
    }, m = function() {
      p2.value = f2.value[0] || null;
    }, b = function() {
      p2.value = null;
    }, y = function() {
      var e = document.getElementById(i2.value).querySelector(".is-pointed");
      if (e) {
        var l2 = e.parentElement;
        e.offsetTop + e.offsetHeight > l2.clientHeight + l2.scrollTop && (l2.scrollTop = e.offsetTop + e.offsetHeight - l2.clientHeight), e.offsetTop < l2.scrollTop && (l2.scrollTop = e.offsetTop);
      }
    };
    return watch(d2, function(e) {
      m();
    }), { pointer: p2, isPointed: function(e) {
      return !!p2.value && p2.value[c2.value] == e[c2.value];
    }, setPointer: h2, setPointerFirst: m, clearPointer: b, selectPointer: function() {
      p2.value && true !== p2.value.disabled ? (v2(p2.value), b()) : b();
    }, forwardPointer: function() {
      if (null === p2.value)
        h2(f2.value[0] || null);
      else {
        var e = f2.value.map(function(e2) {
          return e2[c2.value];
        }).indexOf(p2.value[c2.value]) + 1;
        f2.value.length <= e && (e = 0), h2(f2.value[e] || null);
      }
      nextTick(function() {
        y();
      });
    }, backwardPointer: function() {
      if (null === p2.value)
        h2(f2.value[f2.value.length - 1] || null);
      else {
        var e = f2.value.map(function(e2) {
          return e2[c2.value];
        }).indexOf(p2.value[c2.value]) - 1;
        e < 0 && (e = f2.value.length - 1), h2(f2.value[e] || null);
      }
      nextTick(function() {
        y();
      });
    } };
  }(u, 0, { fo: p.fo, handleOptionClick: p.handleOptionClick, search: v.search, pointer: c.pointer }), h = function(l, t, n) {
    var u2 = toRefs(l), r2 = u2.mode, o2 = u2.addTagOn, i2 = u2.createTag, c2 = n.iv, s2 = n.update, v2 = n.closeDropdown, d2 = n.clearPointer, p2 = n.search, f2 = n.selectPointer;
    return { handleBackspace: function(e) {
      "single" !== r2.value && s2(P(c2.value).slice(0, -1));
    }, handleEsc: function(e) {
      v2(), d2(), e.target.blur();
    }, handleSearchBackspace: function(e) {
      "" !== p2.value && e.stopPropagation();
    }, handleSearchInput: function(e) {
      p2.value = e.target.value;
    }, handleAddTag: function(e) {
      13 !== e.keyCode || -1 === o2.value.indexOf("enter") && i2.value ? 32 === e.keyCode && -1 !== o2.value.indexOf("space") && i2.value && (p2.value = p2.value.trim(), nextTick(function() {
        f2();
      })) : f2();
    } };
  }(u, 0, { iv: o.iv, update: s.update, closeDropdown: d.closeDropdown, clearPointer: f.clearPointer, search: v.search, selectPointer: f.selectPointer });
  return { ...o, ...d, ...i, ...c, ...s, ...v, ...p, ...f, ...h };
} };
var D = { class: "multiselect-single-label" };
var B = { class: "multiselect-multiple-label" };
var I = { key: 2, class: "multiselect-search" };
var A = { key: 3, class: "multiselect-tags" };
var j = { class: "multiselect-tag" };
var M = { class: "multiselect-placeholder" };
var V = createVNode("span", { class: "multiselect-caret" }, null, -1);
var C = { key: 0 };
var $ = createVNode("span", { class: "multiselect-spinner" }, null, -1);
var E = { class: "multiselect-no-options" };
var H = { class: "multiselect-no-results" };
T.render = function(e, l, t, n, a, S2) {
  return openBlock(), createBlock("div", { class: ["multiselect", [`is-${t.mode}`, { "is-open": e.isOpen, "is-searchable": t.searchable, "is-disabled": t.disabled, "no-caret": !t.caret, "open-top": "top" === t.openDirection }]], id: t.id, onKeydown: l[29] || (l[29] = withKeys(withModifiers(() => {
  }, ["prevent"]), ["enter"])), ref: "multiselect" }, [createVNode("div", { class: "multiselect-input", tabindex: e.tabindex, onMousedown: l[20] || (l[20] = (...l2) => e.handleInputMousedown && e.handleInputMousedown(...l2)), onFocus: l[21] || (l[21] = (...l2) => e.openDropdown && e.openDropdown(...l2)), onBlur: l[22] || (l[22] = (...l2) => e.closeDropdown && e.closeDropdown(...l2)), onKeyup: [l[23] || (l[23] = withKeys((...l2) => e.handleEsc && e.handleEsc(...l2), ["esc"])), l[24] || (l[24] = withKeys((...l2) => e.selectPointer && e.selectPointer(...l2), ["enter"]))], onKeydown: [l[25] || (l[25] = withKeys(withModifiers((...l2) => e.handleBackspace && e.handleBackspace(...l2), ["prevent"]), ["delete"])), l[26] || (l[26] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.forwardPointer() : e.backwardPointer(), ["prevent"]), ["up"])), l[27] || (l[27] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.backwardPointer() : e.forwardPointer(), ["prevent"]), ["down"]))] }, [createCommentVNode(" Single label "), "single" == t.mode && e.hasSelected && !e.search && e.iv ? renderSlot(e.$slots, "singlelabel", { key: 0, value: e.iv }, () => [createVNode("div", D, toDisplayString(e.iv[t.label]), 1)]) : createCommentVNode("v-if", true), createCommentVNode(" Multiple label "), "multiple" == t.mode && e.hasSelected && !e.search ? renderSlot(e.$slots, "multiplelabel", { key: 1, values: e.iv }, () => [createVNode("div", B, toDisplayString(e.multipleLabelText), 1)]) : createCommentVNode("v-if", true), createCommentVNode(" Search "), "tags" !== t.mode && t.searchable && !t.disabled ? (openBlock(), createBlock("div", I, [createVNode("input", { modelValue: e.search, value: e.search, onFocus: l[1] || (l[1] = withModifiers((...l2) => e.openDropdown && e.openDropdown(...l2), ["stop"])), onBlur: l[2] || (l[2] = withModifiers((...l2) => e.closeDropdown && e.closeDropdown(...l2), ["stop"])), onKeyup: [l[3] || (l[3] = withKeys(withModifiers((...l2) => e.handleEsc && e.handleEsc(...l2), ["stop"]), ["esc"])), l[4] || (l[4] = withKeys(withModifiers((...l2) => e.selectPointer && e.selectPointer(...l2), ["stop"]), ["enter"]))], onKeydown: [l[5] || (l[5] = withKeys((...l2) => e.handleSearchBackspace && e.handleSearchBackspace(...l2), ["delete"])), l[6] || (l[6] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.forwardPointer() : e.backwardPointer(), ["stop"]), ["up"])), l[7] || (l[7] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.backwardPointer() : e.forwardPointer(), ["stop"]), ["down"]))], onInput: l[8] || (l[8] = (...l2) => e.handleSearchInput && e.handleSearchInput(...l2)), ref: "input" }, null, 40, ["modelValue", "value"])])) : createCommentVNode("v-if", true), createCommentVNode(" Tags (with search) "), "tags" == t.mode ? (openBlock(), createBlock("div", A, [(openBlock(true), createBlock(Fragment, null, renderList(e.iv, (n2, a2, o) => (openBlock(), createBlock("span", { key: o }, [renderSlot(e.$slots, "tag", { option: n2, handleTagRemove: e.handleTagRemove, disabled: t.disabled }, () => [createVNode("div", j, [createTextVNode(toDisplayString(n2[t.label]) + " ", 1), t.disabled ? createCommentVNode("v-if", true) : (openBlock(), createBlock("i", { key: 0, onClick: l[9] || (l[9] = withModifiers(() => {
  }, ["prevent"])), onMousedown: withModifiers((l2) => e.handleTagRemove(n2, l2), ["prevent", "stop"]) }, null, 40, ["onMousedown"]))])])]))), 128)), t.searchable && !t.disabled ? (openBlock(), createBlock("div", { key: 0, class: "multiselect-search", style: { width: e.tagsSearchWidth } }, [createVNode("input", { modelValue: e.search, value: e.search, onFocus: l[10] || (l[10] = withModifiers((...l2) => e.openDropdown && e.openDropdown(...l2), ["stop"])), onBlur: l[11] || (l[11] = withModifiers((...l2) => e.closeDropdown && e.closeDropdown(...l2), ["stop"])), onKeyup: [l[12] || (l[12] = withKeys(withModifiers((...l2) => e.handleEsc && e.handleEsc(...l2), ["stop"]), ["esc"])), l[13] || (l[13] = withKeys(withModifiers((...l2) => e.handleAddTag && e.handleAddTag(...l2), ["stop"]), ["enter"])), l[14] || (l[14] = withKeys(withModifiers((...l2) => e.handleAddTag && e.handleAddTag(...l2), ["stop"]), ["space"]))], onKeydown: [l[15] || (l[15] = withKeys((...l2) => e.handleSearchBackspace && e.handleSearchBackspace(...l2), ["delete"])), l[16] || (l[16] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.forwardPointer() : e.backwardPointer(), ["stop"]), ["up"])), l[17] || (l[17] = withKeys(withModifiers((l2) => "top" === t.openDirection ? e.backwardPointer() : e.forwardPointer(), ["stop"]), ["down"]))], onInput: l[18] || (l[18] = (...l2) => e.handleSearchInput && e.handleSearchInput(...l2)), style: { width: e.tagsSearchWidth }, ref: "input" }, null, 44, ["modelValue", "value"])], 4)) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), createCommentVNode(" Placeholder "), !t.placeholder || e.hasSelected || e.search ? createCommentVNode("v-if", true) : renderSlot(e.$slots, "placeholder", { key: 4 }, () => [createVNode("div", M, toDisplayString(t.placeholder), 1)]), e.hasSelected || !t.caret || e.busy ? createCommentVNode("v-if", true) : renderSlot(e.$slots, "caret", { key: 5 }, () => [V]), e.hasSelected && !t.disabled && !e.busy && t.canDeselect ? renderSlot(e.$slots, "clear", { key: 6, clear: e.clear }, () => [createVNode("a", { class: "multiselect-clear", onClick: l[19] || (l[19] = withModifiers((...l2) => e.clear && e.clear(...l2), ["prevent"])) })]) : createCommentVNode("v-if", true), createVNode(Transition, { name: "multiselect-loading" }, { default: withCtx(() => [e.busy ? (openBlock(), createBlock("span", C, [renderSlot(e.$slots, "spinner", {}, () => [$])])) : createCommentVNode("v-if", true)]), _: 1 })], 40, ["tabindex"]), createCommentVNode(" Options "), e.resolving && t.clearOnSearch ? createCommentVNode("v-if", true) : (openBlock(), createBlock(Transition, { key: 0, name: "multiselect", onAfterLeave: e.clearSearch }, { default: withCtx(() => [withDirectives(createVNode("div", { class: "multiselect-options", style: { maxHeight: e.contentMaxHeight } }, [renderSlot(e.$slots, "beforelist"), (openBlock(true), createBlock(Fragment, null, renderList(e.fo, (n2, a2, o) => (openBlock(), createBlock("span", { tabindex: -1, class: ["multiselect-option", { "is-pointed": e.isPointed(n2), "is-selected": e.isSelected(n2), "is-disabled": e.isDisabled(n2) }], key: o, onMousedown: l[28] || (l[28] = withModifiers(() => {
  }, ["prevent"])), onMouseenter: (l2) => e.setPointer(n2), onClick: withModifiers((l2) => e.handleOptionClick(n2), ["stop", "prevent"]) }, [renderSlot(e.$slots, "option", { option: n2, search: e.search }, () => [createVNode("span", null, toDisplayString(n2[t.label]), 1)])], 42, ["onMouseenter", "onClick"]))), 128)), withDirectives(createVNode("span", null, [renderSlot(e.$slots, "nooptions", {}, () => [createVNode("div", E, toDisplayString(t.noOptionsText), 1)])], 512), [[vShow, e.noOptions]]), withDirectives(createVNode("span", null, [renderSlot(e.$slots, "noresults", {}, () => [createVNode("div", H, toDisplayString(t.noResultsText), 1)])], 512), [[vShow, e.noResults]]), renderSlot(e.$slots, "afterlist")], 4), [[vShow, e.isOpen && t.showOptions]])]), _: 3 }, 8, ["onAfterLeave"])), createCommentVNode(" Hacky input element to show HTML5 required warning "), t.required ? (openBlock(), createBlock("input", { key: 1, class: "multiselect-fake-input", tabindex: "-1", value: e.textValue, required: "" }, null, 8, ["value"])) : createCommentVNode("v-if", true), t.nativeSupport ? (openBlock(), createBlock(Fragment, { key: 2 }, ["single" == t.mode ? (openBlock(), createBlock("input", { key: 0, type: "hidden", name: t.name, value: void 0 !== e.plainValue ? e.plainValue : "" }, null, 8, ["name", "value"])) : (openBlock(true), createBlock(Fragment, { key: 1 }, renderList(e.plainValue, (e2, l2) => (openBlock(), createBlock("input", { type: "hidden", name: `${t.name}[]`, value: e2, key: l2 }, null, 8, ["name", "value"]))), 128))], 64)) : createCommentVNode("v-if", true)], 42, ["id"]);
}, T.__file = "src/Multiselect.vue";
var multiselect_default = T;
export {
  multiselect_default as default
};
//# sourceMappingURL=@vueform_multiselect.js.map
